version: '3.3'

volumes:
  esdata:
    external: true
networks:
  esnet:
    external: true
configs:
  es_proxy_config:
    file: ./es_proxy/nginx.conf
services:
  elasticsearch:
    image: registry.cn-beijing.aliyuncs.com/yangzhenwei/elasticsearch-platinum:6.1.0
    environment:
      - "cluster.name=zhongjiaxin-es-prod"
      - "ES_JAVA_OPTS=-Xms10g -Xmx10g"
      - "ELASTIC_PASSWORD=zhongjiaxin.2017"
      - "network.host=0.0.0.0"
      - "discovery.zen.minimum_master_nodes=2"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
      - "xpack.security.enabled=true"
      - "xpack.security.transport.ssl.enabled=true"
      - "xpack.security.http.ssl.enabled=true"
      - "xpack.security.transport.ssl.verification_mode=certificate"
      - "xpack.ssl.certificate_authorities=/usr/share/elasticsearch/config/x-pack/certificates/ca/ca.crt"
      - "xpack.ssl.certificate=/usr/share/elasticsearch/config/x-pack/certificates/elasticsearch/elasticsearch.crt"
      - "xpack.ssl.key=/usr/share/elasticsearch/config/x-pack/certificates/elasticsearch/elasticsearch.key"
      - "script.painless.regex.enabled=true"
    ulimits:
      memlock: -1
      nofile:
        hard: 65536
        soft: 65536
      nproc: 65538
    networks:
      - esnet
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime:ro
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.elasticsearch == elasticsearch
      endpoint_mode: dnsrr
  es_proxy:
    image: nginx:latest
    ports:
      - "9200:80"
    networks:
      - esnet
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1024M
      update_config:
        parallelism: 1
        delay: 5s
      placement:
        constraints:
          - node.role != manager
      restart_policy:
        condition: on-failure
    configs:
      - source: es_proxy_config
        target: /etc/nginx/nginx.conf
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - esnet


