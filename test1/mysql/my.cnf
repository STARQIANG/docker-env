[client]
port = 3306
socket = /tmp/mysql.sock
default-character-set = utf8mb4


[mysqld]

user = mysql
port = 3306

datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

symbolic-links=0

log-error=/var/lib/mysql/error.log
pid-file=/var/run/mysqld/mysqld.pid

#标识数据库实，主从复制，不能重复，必须为1到232–1之间的一个正整数值
server_id = 112

#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录
relay-log = relay-log

#开启该参数的时候，Innodb将每个新创建的表的数据及索引存储在一个独立的.ibd文件里，而不是系统的表空间
innodb_file_per_table = ON

#只读模式，可以限定普通用户进行数据修改的操作，但不会限定具有super权限的用户的数据修改操作
#read_only = ON

#将MySQL的relaylog多保留一段时间，用于MHA高可用切换后的数据补齐(*有坑*)
relay_log_purge=0

#不区分大小写
lower_case_table_names=1

#默认InoDB存储引擎
default_storage_engine = InnoDB

#默认编码utf8mb4
character_set_server = utf8mb4

#禁止DNS解析，使mysql.user表中基于主机名的授权将无法使用
skip_name_resolve = 1

#该值设置过小将导致单个记录超过限制后写入数据库失败，且后续记录写入也将失败
max_allowed_packet = 100M

#MySQL最大连接数
max_connections = 2000
#阻止过多尝试失败的客户端以防止暴力破解密码
max_connect_errors = 100

#临时表的内存缓存大小,单位字节,
#临时HEAP数据表的最大长度(默认设置是32M); 超过这个长度的临时数据表将被转换为MyISAM数据表并存入一个临时文件
tmp_table_size = 67108864

#explicit_defaults_for_timestamp = 1

#在参加JOIN操作的数据列没有索引时为JOIN操作分配的缓存区长度(默认设置是128K)
join_buffer_size = 134217728

#服务器关闭交互式连接前等待活动的秒数，参数默认值：28800秒（8小时）
interactive_timeout = 5400

#服务器关闭非交互连接之前等待活动的秒数。参数默认值：28800秒（8小时）
wait_timeout = 86400

#为从数据表顺序读取数据的读操作保留的缓存区的长度(默认设置是128KB)
read_buffer_size = 16777216

#类似于read_buffer_size选项，但针对的是按某种特定顺序(比如使用了ORDER BY子句的查询)输出的查询结果(默认设置是256K)
read_rnd_buffer_size = 33554432

#默认值是1048576字节
#sort_buffer_size = 33554432

#用来存放索引区块的RMA值(默认设置是8M)
key_buffer_size = 256M

#MySQL数据库事务隔离级别,READ-COMMITTED事务隔离级别，只有在事务提交后，才会对另一个事务产生影响，并且在对表进行修改时，会对表数据行加上行共享锁
transaction_isolation = READ-COMMITTED

#开启半同步复制
#rpl_semi_sync_master_enabled=1
#rpl_semi_sync_master_timeout=10000
#rpl_semi_sync_slave_enabled=1


sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION

explicit_defaults_for_timestamp=false

##########log settings###################
#开启二进制日志
log-bin = master-log
#二进制日志自动删除的天数。默认值为0,表示“没有自动删除”
expire_logs_days = 30
#设置二进制记录格式，row格式记录的实际数据的变更,缺点是binlog文件较大
binlog_format = ROW
#启用慢查询日志
slow_query_log = 1
#超过多少秒的查询就写入日志
long_query_time = 8
#超过 long_query_time 时间的管理类语句是否记录
log_slow_admin_statements = 1
#slave 执行的慢查询语句是否记录下来
log_slow_slave_statements = 1
#慢查询日志文件路径,默认在/var/lib/mysql下
slow_query_log_file = slow-queries.log
#查询结果集行数小于该数值，则不会记录下来；0 为无限制。
min_examined_row_limit = 100
#启用之可用于在二进制日志记录事件相关的信息，可降低故障排除的复杂度；
binlog-rows-query-log_events = 1

#MySQL 的二进制日志（binary log）同步到磁盘的频率，默认值是0，设为1最安全，在每个语句或事务后同步一次binarylog，即使在崩溃时也最多丢失一个语句或事务的日志，但因此也最慢。
sync_binlog = 1


###########replication##########
#开启GTID
gtid-mode = on
enforce-gtid-consistency = true
