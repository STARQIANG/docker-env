input {
  beats {
    port => 5044
  }
  kafka {
    bootstrap_servers => "kafka1:9092,kafka2:9092,kafka3:9092"
    client_id => "logstash"
    group_id => "logstash"
    consumer_threads => 2
    topics => ["log"]
    codec => "json"
    tags => ["log", "kafka_source"]
    type => "log"
  }
}
filter {

    if  (("tomcat" in [tags]) or ([type] == "tomcat")) and  ([message] =~ "^\d{4}\-\d{2}\-\d{2}\s\d+\:\d+\:\d+\,\d+\^\|\^") {
         mutate {
             split=>["message","^|^"]
             add_field => {
                "datetime" => "%{[message][0]}"
                "appName" => "%{[message][1]}"
                "requestId" => "%{[message][2]}"
                "level" => "%{[message][3]}"
                "class" => "%{[message][4]}"
                "thread" => "%{[message][5]}"
                "msg" => "%{[message][6]}"
             }
         }

    } else if ("nginx" in [tags]) or ([type] == "nginx") {

        if [message] =~ "^{" {

            json {
                source => "message"
            }

            mutate {
                convert => [ "upstream_response_time","float" ]
                convert => [ "request_time","float" ]
            }
        }else {
            grok {
                match => {
                     "message" => "%{IPORHOST:clientip} (?:-|(%{WORD}.%{WORD})) %{USER:ident} \[%{HTTPDATE:datetime}\] \"(?:%{WORD:method} %{NOTSPACE:url}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:status} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}"
                }
            }
        }


        date {
            locale => "en"
            match => ["datetime", "dd/MMM/yyyy:HH:mm:ss Z"]
            target => "@timestamp"
        }

        mutate {
            convert => ["status", "integer"]
            convert => [ "bytes","integer" ]
            remove_field => ["datetime","httpversion"]
        }
        if [clientip] !~ "^127\.|^192\.168\.|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[01]\.|^10\." {    #排除私网地址
            geoip {
                source =>"clientip"
                target =>"geoip"
                database =>"/usr/share/logstash/GeoLite2-City.mmdb"
                add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
                add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}" ]
            }
        }



    } else {
    }
}
output {

    if ( ("tomcat" in [tags]) or ([type] == "tomcat") ) and ([datetime] =~ "^\d{4}\-\d{2}\-\d{2}\s\d+\:\d+\:\d+\,\d+") {
        if ([appName]) and ([appName] =~ "^.{1,}$" ) {
             elasticsearch {
                 hosts => [ "https://elasticsearch:9200" ]
                 cacert => "/usr/share/logstash/certs/ca/ca.crt"
                 user => "elastic"
                 password => "zhongjiaxin.2017"

                index => "tomcat-%{appName}-%{+YYYY.MM.dd}"
             }
        }else {

             elasticsearch {
                 hosts => [ "https://elasticsearch:9200" ]
                 cacert => "/usr/share/logstash/certs/ca/ca.crt"
                 user => "elastic"
                 password => "zhongjiaxin.2017"

                index => "tomcat-%{+YYYY.MM.dd}"
             }
        }

        if ([level]) and ([level] == "ERROR") {
              kafka {
                topic_id => "tomcat_error"
                bootstrap_servers => "kafka1:9092,kafka2:9092,kafka3:9092"
              }
        }
    } else if ("nginx" in [tags]) or ([type] == "nginx") {

        if ([appName]) and ([appName] =~ "^.{1,}$") {
             elasticsearch {
                 hosts => [ "https://elasticsearch:9200" ]
                 cacert => "/usr/share/logstash/certs/ca/ca.crt"
                 user => "elastic"
                 password => "zhongjiaxin.2017"

                index => "nginx-app-%{appName}-%{+YYYY.MM.dd}"
             }
        }else {
             elasticsearch {
                 hosts => [ "https://elasticsearch:9200" ]
                 cacert => "/usr/share/logstash/certs/ca/ca.crt"
                 user => "elastic"
                 password => "zhongjiaxin.2017"

                index => "nginx-%{+YYYY.MM.dd}"
             }
        }
        if ([status]) and ([status] =~ "^[4|5][0-9]*") {
              kafka {
                codec => json
                topic_id => "nginx_error"
                bootstrap_servers => "kafka1:9092,kafka2:9092,kafka3:9092"
              }
        }
    } else {
          elasticsearch {
             hosts => [ "https://elasticsearch:9200" ]
             cacert => "/usr/share/logstash/certs/ca/ca.crt"
             user => "elastic"
             password => "zhongjiaxin.2017"
             ssl => true
             index => "unknow-%{+YYYY.MM.dd}"
          }
    }
}

